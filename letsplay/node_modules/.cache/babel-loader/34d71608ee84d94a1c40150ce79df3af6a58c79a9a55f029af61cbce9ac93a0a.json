{"ast":null,"code":"var _jsxFileName = \"/Users/shaylavi/Desktop/letsPlay /letsplay/src/pages/Stage2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Stage2.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Stage2() {\n  _s();\n  const queryParams = new URLSearchParams(window.location.search);\n  const players = parseInt(queryParams.get('players'), 10) || 1;\n  const mode = queryParams.get('mode');\n  const [playerNames, setPlayerNames] = useState(Array(players).fill(''));\n  const handleInputChange = (event, index) => {\n    const updatedPlayerNames = [...playerNames];\n    updatedPlayerNames[index] = event.target.value;\n    setPlayerNames(updatedPlayerNames);\n    console.log(updatedPlayerNames);\n  };\n  function redirect() {\n    const namesQueryParam = encodeURIComponent(JSON.stringify(playerNames));\n    const queryParams = `?names=${namesQueryParam}`;\n    if (!updatedPlayerNames.conatins(\"\")) {\n      window.location.href = '/stage3' + queryParams;\n    } else {\n      alert(\"you have to fill all the name of the players\");\n    }\n  }\n  const playerInputs = [];\n  for (let i = 0; i < players; i++) {\n    playerInputs.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__group field\",\n      style: {\n        marginBottom: '25px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form__field\",\n        placeholder: `Player ${i + 1} Name`,\n        name: `player${i}`,\n        id: `player${i}`,\n        required: true,\n        value: playerNames[i],\n        onChange: event => handleInputChange(event, i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `player${i}`,\n        className: \"form__label\",\n        children: `Player ${i + 1} Name`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stage1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textfield2\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"desc2\",\n        children: \"Enter players names\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: playerInputs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonletsplay\",\n        style: {\n          marginTop: '20px',\n          position: 'relative'\n        },\n        onClick: redirect,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Stage2, \"xCJWBjbSHi759nyh5pj+FQswVic=\");\n_c = Stage2;\nexport default Stage2;\nvar _c;\n$RefreshReg$(_c, \"Stage2\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Stage2","_s","queryParams","URLSearchParams","window","location","search","players","parseInt","get","mode","playerNames","setPlayerNames","Array","fill","handleInputChange","event","index","updatedPlayerNames","target","value","console","log","redirect","namesQueryParam","encodeURIComponent","JSON","stringify","conatins","href","alert","playerInputs","i","push","className","style","marginBottom","children","type","placeholder","name","id","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","marginTop","position","onClick","_c","$RefreshReg$"],"sources":["/Users/shaylavi/Desktop/letsPlay /letsplay/src/pages/Stage2.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Stage2.css';\n\nfunction Stage2() {\n    const queryParams = new URLSearchParams(window.location.search);\n    const players = parseInt(queryParams.get('players'), 10) || 1;\n    const mode = queryParams.get('mode');\n\n    const [playerNames, setPlayerNames] = useState(Array(players).fill(''));\n\n    const handleInputChange = (event, index) => {\n        const updatedPlayerNames = [...playerNames];\n        updatedPlayerNames[index] = event.target.value;\n        setPlayerNames(updatedPlayerNames);\n        console.log(updatedPlayerNames);\n    };\n\n    function redirect() {\n        const namesQueryParam = encodeURIComponent(JSON.stringify(playerNames));\n        const queryParams = `?names=${namesQueryParam}`;\n        if(!updatedPlayerNames.conatins(\"\"))\n        {\n            window.location.href = '/stage3' + queryParams;\n        }\n        else\n        {\n            alert(\"you have to fill all the name of the players\")\n        }\n    }\n\n    const playerInputs = [];\n\n    for (let i = 0; i < players; i++) {\n        playerInputs.push(\n            <div key={i} className=\"form__group field\" style={{marginBottom:'25px'}}>\n                <input\n                    type=\"input\"\n                    className=\"form__field\"\n                    placeholder={`Player ${i + 1} Name`}\n                    name={`player${i}`}\n                    id={`player${i}`}\n                    required\n                    value={playerNames[i]}\n                    onChange={(event) => handleInputChange(event, i)}\n                />\n                <label htmlFor={`player${i}`} className=\"form__label\">{`Player ${i + 1} Name`}</label>\n            </div>\n        );\n    }\n\n    return (\n        <div className='stage1'>\n            <div className='textfield2'>\n            <p className='desc2'>Enter players names</p>\n                <div>\n                    {playerInputs}\n                </div>\n                <button className='buttonletsplay' style={{ marginTop: '20px', position: 'relative' ,}} onClick={redirect}>Next</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Stage2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}