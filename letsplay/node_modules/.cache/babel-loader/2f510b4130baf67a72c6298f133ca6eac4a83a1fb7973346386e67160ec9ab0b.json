{"ast":null,"code":"var _jsxFileName = \"/Users/shaylavi/Desktop/letsPlay /letsplay/src/pages/Stage4.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport data from '../assets/db.json';\nimport './Stage4.css';\nimport MatchCardP from '../components/MatchCardp';\nimport MatchCardS from '../components/MatchCards';\nimport MatchImage from '../components/MatchImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Stage4() {\n  _s();\n  const queryParams = new URLSearchParams(window.location.search);\n  const players = parseInt(queryParams.get('players'), 10) || 1;\n  const mode = queryParams.get('mode');\n  let names = queryParams.get('names');\n  const league = queryParams.get('league');\n  const rating = queryParams.get('rating');\n  const [selectedTeams, setSelectedTeams] = useState([]);\n  const [result, setResult] = useState([]);\n  function createSingleMatch(leagueName) {\n    const selectedLeague = data.leagues.find(l => l.name === leagueName);\n    if (selectedLeague) {\n      const teamsSelected = selectedLeague.teams.filter(team => team.rating === rating);\n      const selectedTeamss = [];\n      for (let i = 0; i < Math.min(players, teamsSelected.length); i++) {\n        let index = Math.floor(Math.random() * teamsSelected.length);\n        while (selectedTeamss.includes(teamsSelected[index])) {\n          index = Math.floor(Math.random() * teamsSelected.length);\n        }\n        selectedTeamss.push(teamsSelected[index]);\n      }\n      setSelectedTeams(selectedTeamss);\n      let res = [];\n      for (let i = 0; i < names.length && i < selectedTeams.length; i++) {\n        res.push({\n          name: names[i],\n          team: selectedTeams[i]\n        });\n      }\n      setResult(res);\n    }\n  }\n  function createPairsMatch(leagueName) {\n    const selectedLeague = data.leagues.find(l => l.name === leagueName);\n    if (selectedLeague) {\n      const teamsSelected = selectedLeague.teams.filter(team => team.rating === rating);\n      const selectedTeamss = [];\n      for (let i = 0; i < Math.min(players / 2, teamsSelected.length); i++) {\n        let index = Math.floor(Math.random() * teamsSelected.length);\n        while (selectedTeamss.includes(teamsSelected[index])) {\n          index = Math.floor(Math.random() * teamsSelected.length);\n        }\n        selectedTeamss.push(teamsSelected[index]);\n      }\n      setSelectedTeams(selectedTeamss);\n      let res = [];\n      let pairs = generateUniquePairs(names);\n      for (let i = 0; i < pairs.length && i < selectedTeams.length; i++) {\n        res.push({\n          name: pairs[i],\n          team: selectedTeams[i]\n        });\n      }\n      setResult(res);\n    }\n  }\n  function generateUniquePairs(namesArray) {\n    const pairs = [];\n    while (namesArray.length >= 2) {\n      const index1 = Math.floor(Math.random() * namesArray.length);\n      let index2 = Math.floor(Math.random() * (namesArray.length - 1));\n      if (index2 >= index1) {\n        index2++;\n      }\n      const name1 = namesArray[index1];\n      const name2 = namesArray[index2];\n      pairs.push({\n        name1,\n        name2\n      });\n      namesArray.splice(Math.max(index1, index2), 1);\n      namesArray.splice(Math.min(index1, index2), 1);\n    }\n    return pairs;\n  }\n  function playAgain(event) {\n    event.preventDefault();\n    const queryParams = `?names=${names}&players=${players}&mode=${mode}`;\n    window.location.href = '/stage3' + queryParams;\n  }\n  function reset(event) {\n    event.preventDefault();\n    window.location.href = '/stage1';\n  }\n  useEffect(() => {\n    console.log('effect re-render');\n    if (typeof names === 'string') {\n      names = names.split(',');\n    }\n    let res = [];\n    if (mode === 'singles') {\n      if (league === 'La liga') {\n        createSingleMatch('La liga');\n      }\n      if (league === 'Priemer league') {\n        createSingleMatch('Priemer league');\n      }\n      if (league === 'Bundesliga') {\n        createSingleMatch('Bundesliga');\n      }\n      if (league === 'Serie A') {\n        createSingleMatch('Serie A');\n      }\n      if (league === 'Ligue 1') {\n        createSingleMatch('Ligue 1');\n      }\n      if (league === 'International') {\n        createSingleMatch('International');\n      }\n      if (league === 'All') {\n        let selectedTeams = [];\n        for (let i = 0; i < names.length; i++) {\n          let leagueindex = Math.floor(Math.random() * data.leagues.length);\n          const selectedLeague = data.leagues[leagueindex];\n          if (selectedLeague) {\n            const teamsSelected = selectedLeague.teams.filter(team => team.rating === rating);\n            let index = Math.floor(Math.random() * teamsSelected.length);\n            while (selectedTeams.includes(teamsSelected[index])) {\n              index = Math.floor(Math.random() * teamsSelected.length);\n            }\n            selectedTeams.push(teamsSelected[index]);\n          }\n        }\n        setSelectedTeams(selectedTeams);\n        for (let i = 0; i < names.length; i++) {\n          res.push({\n            name: names[i],\n            team: selectedTeams[i]\n          });\n        }\n        console.log('set result***', res);\n        setResult(res);\n      }\n    }\n    if (mode === 'pairs') {\n      if (league === 'La liga') {\n        createPairsMatch('La liga');\n      }\n      if (league === 'Priemer league') {\n        createPairsMatch('Priemer league');\n      }\n      if (league === 'Bundesliga') {\n        createPairsMatch('Bundesliga');\n      }\n      if (league === 'Serie A') {\n        createPairsMatch('Serie A');\n      }\n      if (league === 'Ligue 1') {\n        createPairsMatch('Ligue 1');\n      }\n      if (league === 'International') {\n        createPairsMatch('International');\n      }\n      if (league === 'All') {\n        const selectedTeamss = [];\n        for (let i = 0; i < names.length; i++) {\n          let leagueindex = Math.floor(Math.random() * data.leagues.length);\n          const selectedLeague = data.leagues[leagueindex];\n          if (selectedLeague) {\n            const teamsSelected = selectedLeague.teams.filter(team => team.rating === rating);\n            let index = Math.floor(Math.random() * teamsSelected.length);\n            while (selectedTeamss.includes(teamsSelected[index])) {\n              index = Math.floor(Math.random() * teamsSelected.length);\n            }\n            selectedTeamss.push(teamsSelected[index]);\n          }\n        }\n        setSelectedTeams(selectedTeamss);\n        console.log(selectedTeams);\n        let pairs = generateUniquePairs(names);\n        let res = [];\n        for (let i = 0; i < pairs.length; i++) {\n          res.push({\n            name: pairs[i],\n            team: selectedTeams[i]\n          });\n        }\n        setResult(result);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: result.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage1\",\n        style: {\n          overflow: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title4\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Starting matches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-cards-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonletsplay\",\n            style: {\n              marginTop: '20px'\n            },\n            onClick: playAgain,\n            children: \"Play again with diffrent teams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonletsplay\",\n            style: {\n              marginTop: '20px'\n            },\n            onClick: reset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Stage4, \"ozrxYFRtrLORERO+tulhyiyNCIk=\");\n_c = Stage4;\nexport default Stage4;\nvar _c;\n$RefreshReg$(_c, \"Stage4\");","map":{"version":3,"names":["React","useEffect","useState","data","MatchCardP","MatchCardS","MatchImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Stage4","_s","queryParams","URLSearchParams","window","location","search","players","parseInt","get","mode","names","league","rating","selectedTeams","setSelectedTeams","result","setResult","createSingleMatch","leagueName","selectedLeague","leagues","find","l","name","teamsSelected","teams","filter","team","selectedTeamss","i","Math","min","length","index","floor","random","includes","push","res","createPairsMatch","pairs","generateUniquePairs","namesArray","index1","index2","name1","name2","splice","max","playAgain","event","preventDefault","href","reset","console","log","split","leagueindex","children","className","style","overflow","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/shaylavi/Desktop/letsPlay /letsplay/src/pages/Stage4.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport data from '../assets/db.json';\nimport './Stage4.css';\nimport MatchCardP from '../components/MatchCardp';\nimport MatchCardS from '../components/MatchCards';\nimport MatchImage from '../components/MatchImage';\n\nfunction Stage4() {\n  const queryParams = new URLSearchParams(window.location.search);\n  const players = parseInt(queryParams.get('players'), 10) || 1;\n  const mode = queryParams.get('mode');\n  let names = queryParams.get('names');\n  const league = queryParams.get('league');\n  const rating = queryParams.get('rating');\n  const [selectedTeams, setSelectedTeams] = useState([]);\n  const [result, setResult] = useState([]);\n  function createSingleMatch(leagueName)\n  {\n    const selectedLeague = data.leagues.find((l) => l.name === leagueName);\n    if (selectedLeague) {\n      const teamsSelected = selectedLeague.teams.filter((team) => team.rating === rating);\n      const selectedTeamss = [];\n\n      for (let i = 0; i < Math.min(players, teamsSelected.length); i++) {\n        let index = Math.floor(Math.random() * teamsSelected.length);\n        while (selectedTeamss.includes(teamsSelected[index])) {\n          index = Math.floor(Math.random() * teamsSelected.length);\n        }\n        selectedTeamss.push(teamsSelected[index]);\n      }\n      setSelectedTeams(selectedTeamss);\n\n      let res = [];\n      for (let i = 0; i < names.length && i < selectedTeams.length; i++) {\n        res.push({ name: names[i], team: selectedTeams[i] });\n      }\n      setResult(res);\n    }\n  }\n  function createPairsMatch(leagueName)\n  {\n    const selectedLeague = data.leagues.find((l) => l.name === leagueName);\n    if (selectedLeague) {\n      const teamsSelected = selectedLeague.teams.filter((team) => team.rating === rating);\n      const selectedTeamss = [];\n\n      for (let i = 0; i < Math.min(players/2, teamsSelected.length); i++) {\n        let index = Math.floor(Math.random() * teamsSelected.length);\n        while (selectedTeamss.includes(teamsSelected[index])) {\n          index = Math.floor(Math.random() * teamsSelected.length);\n        }\n        selectedTeamss.push(teamsSelected[index]);\n      }\n      setSelectedTeams(selectedTeamss);\n\n      let res = [];\n      let pairs = generateUniquePairs(names);\n      for (let i = 0; i < pairs.length && i < selectedTeams.length; i++) {\n        res.push({ name: pairs[i], team: selectedTeams[i] });\n      }\n      setResult(res);\n    }\n  }\n  function generateUniquePairs(namesArray) {\n    const pairs = [];\n    \n    while (namesArray.length >= 2) {\n      const index1 = Math.floor(Math.random() * namesArray.length);\n      let index2 = Math.floor(Math.random() * (namesArray.length - 1));\n      \n      if (index2 >= index1) {\n        index2++;\n      }\n      const name1 = namesArray[index1];\n      const name2 = namesArray[index2];\n      pairs.push({ name1, name2 });\n      namesArray.splice(Math.max(index1, index2), 1);\n      namesArray.splice(Math.min(index1, index2), 1);\n    }\n  \n    return pairs;\n  }\n  function playAgain(event) {\n    event.preventDefault(); \n\n    const queryParams = `?names=${names}&players=${players}&mode=${mode}`;\n    window.location.href = '/stage3' + queryParams;\n  }\n  function reset(event) {\n    event.preventDefault(); \n\n    window.location.href = '/stage1';\n  }\n  useEffect(() => {   \n    console.log('effect re-render');\n    if (typeof names === 'string') {\n      names = names.split(',');\n    }\n    let res = [];\n    if (mode === 'singles') {\n      if (league === 'La liga') {\n        createSingleMatch('La liga')\n        }\n      if (league === 'Priemer league') {\n          createSingleMatch('Priemer league')\n          }\n      if (league === 'Bundesliga') {\n            createSingleMatch('Bundesliga')\n            }\n      if (league === 'Serie A') {\n          createSingleMatch('Serie A')\n          }\n      if (league === 'Ligue 1') {\n            createSingleMatch('Ligue 1')\n        }\n      if (league === 'International') {\n          createSingleMatch('International')\n      }\n      if (league === 'All') {\n        let selectedTeams = [];\n        for(let i=0;i<names.length;i++)\n        {\n          let leagueindex = Math.floor(Math.random() * data.leagues.length);\n          const selectedLeague = data.leagues[leagueindex];\n          if (selectedLeague) {\n            const teamsSelected = selectedLeague.teams.filter((team) => team.rating === rating);\n            let index = Math.floor(Math.random() * teamsSelected.length);\n            while (selectedTeams.includes(teamsSelected[index])) {\n                index = Math.floor(Math.random() * teamsSelected.length);\n              }\n              selectedTeams.push(teamsSelected[index]);\n            }\n         }\n         setSelectedTeams(selectedTeams);\n         for (let i = 0; i < names.length; i++) {\n           res.push({ name: names[i], team: selectedTeams[i] });\n         }\n         console.log('set result***', res)\n         setResult(res)\n      }\n    }\n    if (mode === 'pairs')\n    {\n      if (league === 'La liga') {\n        createPairsMatch('La liga')\n        }\n      if (league === 'Priemer league') {\n        createPairsMatch('Priemer league')\n          }\n      if (league === 'Bundesliga') {\n        createPairsMatch('Bundesliga')\n            }\n      if (league === 'Serie A') {\n        createPairsMatch('Serie A')\n          }\n      if (league === 'Ligue 1') {\n        createPairsMatch('Ligue 1')\n        }\n      if (league === 'International') {\n        createPairsMatch('International')\n      }\n      if (league === 'All') {\n        const selectedTeamss = [];\n        for (let i = 0; i < names.length; i++) {\n          let leagueindex = Math.floor(Math.random() * data.leagues.length);\n          const selectedLeague = data.leagues[leagueindex];\n          if (selectedLeague) {\n            const teamsSelected = selectedLeague.teams.filter((team) => team.rating === rating);\n            let index = Math.floor(Math.random() * teamsSelected.length);\n            while (selectedTeamss.includes(teamsSelected[index])) {\n              index = Math.floor(Math.random() * teamsSelected.length);\n            }\n            selectedTeamss.push(teamsSelected[index]);\n          }\n        }\n        setSelectedTeams(selectedTeamss);\n        console.log(selectedTeams)\n        let pairs = generateUniquePairs(names);\n        let res = [];\n        for (let i = 0; i < pairs.length; i++) {\n          res.push({ name: pairs[i], team: selectedTeams[i] });\n        }\n        setResult(result)\n      }\n    }\n  }, []);\n  return (\n    <>\n      {result.length > 0 ? (\n        <div>\n          <div className='stage1' style={{overflow:\"auto\"}}>\n            <p className='title4'><b>Starting matches</b></p>\n            <div className=\"match-cards-container\">\n\n            </div>\n            <div className = \"buttons\">\n            <button className='buttonletsplay'  style={{ marginTop: '20px' }} onClick={playAgain}>Play again with diffrent teams</button>\n            <button className='buttonletsplay'  style={{ marginTop: '20px' }} onClick={reset}>Reset</button>\n            </div>\n            </div>\n        </div>\n      ) : (\n        <h1>loading</h1>\n      )}\n    </>\n  );\n}\n\nexport default Stage4;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}